@* -- HAS DELIVERY -- *@
<script>
    Vue.component('delivery-info', {
    props: {
        delivery: '',
    },
    methods: {
        clickHandler(event) {
            this.$emit('change', !this.delivery);
        }
    },
    data: function () {
        return {
            deliveryIcon: 'fa fa-circle-thin fa-stack-2x text-success',
            noDeliveryIcon: 'fa fa-ban fa-stack-2x text-danger',
        }
    },
    render: function (createElement) {
        var stack1Icon = createElement('i', {
            attrs: {
                class: 'fa fa-truck fa-stack-1x',
            }
        });
        var stack2Icon = createElement('i', {
            attrs: {
                class: this.delivery ? this.deliveryIcon : this.noDeliveryIcon,
            },
        });

        var a = createElement('a', {
            attrs: {
                href: "#",
            },
            on: {
                click: this.clickHandler
            },
        },
            [stack1Icon, stack2Icon]);

        return createElement('span', {
            attrs: {
                class: 'fa-stack',
            }
        }, [a]
        );
    },
})
</script>


@* -- END HAS DELIVERY -- *@

@* -- DAYS INCREMENT START-- *@

<script type="text/x-template" id="daysinc-template">
    <span>
        <span class="fa-stack" 
              v-on:click="updateValue()">
            <i class="fa fa-circle fa-stack-2x"></i>
            <span class="fa-stack-1x text-primary">{{ inc }}</span>
        </span>
    </span>
</script>
<script>
    Vue.component('daysinc-info', {
        data: function () {
            return {
                showModal: false,
            }
        },
        props: {
            inc: {
                type: Number,
                default: 0
            },
        },
        template: '#daysinc-template',
        methods: {
            updateValue: function () {
                var value = this.inc === 0 ? 1 : 0;
                this.$emit('change', Number(value))
            },
        }
    })
</script>


<script type="text/x-template" id="cutoff-template">
    <div>
        <span @@click="showModal = true">
            <i class="fa fa-clock-o"></i>
            <span class="text-info">{{ value }}</span>
        </span>
        <!-- use the modal component, pass in the prop -->
        <div class="modal-mask" v-if="showModal">
            <div class="modal-wrapper">
                <div class="modal-container">
                    <div class="modal-header">
                        <slot name="header">
                            Set shipment cutoff
                        </slot>
                    </div>

                    <div class="modal-body">
                        <slot name="body">
                            <input type="time"
                                   ref="input"
                                   min="0"
                                   v-bind:value="value"
                                   v-on:input="updateValue($event.target.value)" />
                            <button type="button"
                                    class="modal-default-button"
                                    @@click="showModal = false">
                                OK
                            </button>
                        </slot>
                    </div>
                </div>
            </div>
        </div>
    </div>
</script>
@* -- DAYS INCREMENT END-- *@

@* -- CUTOFF START-- *@

<script>
    Vue.component('cutoff-info', {
        data: function () {
            return {
                showModal: false,
            }
        },
        props: {
            value: {
                type: String,
            },
        },
        template: '#cutoff-template',
        methods: {
            updateValue: function (value) {
                this.$emit('input', value)
            },
        }
    })
</script>
@* -- CUTOFF END-- *@
<script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.11.2/moment.min.js"></script>
<script src="~/Scripts/homeVue.js"></script>
